@implements IDisposable
@inject NavigationManager NavigationManager
@inject BlazorApp1.Services.UserSession UserSession

<nav class="horizontal-nav">
    <ul class="nav-items">
        <!-- Public Links -->
        <li>
            <NavLink href="" Match="NavLinkMatch.All">
                Žebøíèek
            </NavLink>
        </li>
        <li>
            <NavLink href="maps">
                Mapy
            </NavLink>
        </li>

        @if (UserSession.HasRole(BlazorApp1.Models.UserRole.Team))
        {
            <li>
                <NavLink href="team/dashboard">
                    Dashboard
                </NavLink>
            </li>
            <li>
                <NavLink href="team/statistics">
                    Statistiky
                </NavLink>
            </li>
            <li>
                <NavLink href="team/achievements">
                    Achievementy
                </NavLink>
            </li>
        }

        @if (UserSession.HasRole(BlazorApp1.Models.UserRole.Referee) || UserSession.HasRole(BlazorApp1.Models.UserRole.Admin))
        {
            <li>
                <NavLink href="referee/scoring">
                    Bodování
                </NavLink>
            </li>
        }

        @if (UserSession.HasRole(BlazorApp1.Models.UserRole.HeadReferee) || UserSession.HasRole(BlazorApp1.Models.UserRole.Admin))
        {
            <li>
                <NavLink href="headref/control">
                    Ovládání
                </NavLink>
            </li>
            <li>
                <NavLink href="admin/referee-approval">
                    Schvalování
                </NavLink>
            </li>
        }

        @if (UserSession.HasRole(BlazorApp1.Models.UserRole.Admin))
        {
            <li>
                <NavLink href="admin/teams">
                    Admin
                </NavLink>
            </li>
        }

        <!-- Login / Logout -->
        @if (UserSession.IsAuthenticated)
        {
            <li class="nav-user">
                <span class="material-symbols-outlined user-icon">account_circle</span>
                <div class="user-info">
                    <span class="user-name">@UserSession.Username</span>
                    <span class="user-role">@GetRoleName(UserSession.Role)</span>
                </div>
            </li>
            <li>
                <a href="/logout" class="nav-logout">
                    <span class="material-symbols-outlined">logout</span>
                    <span>Odhlásit</span>
                </a>
            </li>
        }
        else
        {
            <li>
                <NavLink href="login">
                    <span class="material-symbols-outlined">login</span>
                    <span>Pøihlásit se</span>
                </NavLink>
            </li>
        }
    </ul>
</nav>

@code {
    protected override void OnInitialized()
    {
        try
        {
            NavigationManager.LocationChanged += OnLocationChanged;
            UserSession.OnChange += StateHasChanged;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"[ERROR NavMenu.OnInitialized] {ex.Message}");
            Console.WriteLine($"[ERROR StackTrace] {ex.StackTrace}");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                await UserSession.InitializeAsync();
                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"[ERROR NavMenu.OnAfterRenderAsync] {ex.Message}");
                Console.WriteLine($"[ERROR StackTrace] {ex.StackTrace}");
                // Pokraèujeme i když inicializace selže - uživatel nebude pøihlášen
            }
        }
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        StateHasChanged();
    }

    private string GetRoleName(BlazorApp1.Models.UserRole role)
    {
        return role switch
        {
            BlazorApp1.Models.UserRole.Team => "Tým",
            BlazorApp1.Models.UserRole.Referee => "Rozhodèí",
            BlazorApp1.Models.UserRole.HeadReferee => "Hlavní rozhodèí",
            BlazorApp1.Models.UserRole.Production => "Produkce",
            BlazorApp1.Models.UserRole.Admin => "Administrátor",
            _ => "Návštìvník"
        };
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
        UserSession.OnChange -= StateHasChanged;
    }
}
