@page "/"
@inject BlazorApp1.Services.ITeamService TeamService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>DROID GAMES 2026</PageTitle>

<div style="padding: 40px; background: #1a1a1a; min-height: 100vh; color: white;">
    <h1 style="color: #00d4ff; margin-bottom: 20px;">🤖 DROID GAMES 2026</h1>
    
    @if (_isLoading)
    {
        <div style="padding: 20px; background: #333; border-radius: 10px; margin: 20px 0;">
            <h2 style="color: yellow;">⏳ Načítání dat...</h2>
            <p>@_status</p>
        </div>
    }
    else if (_error != null)
    {
        <div style="padding: 20px; background: #cc0000; border-radius: 10px; margin: 20px 0;">
            <h2 style="color: white;">❌ Chyba</h2>
            <p style="font-family: monospace; white-space: pre-wrap;">@_error</p>
            <button style="background: white; color: #cc0000; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; margin-top: 10px;" 
                    @onclick="ReloadData">
                Zkusit znovu
            </button>
        </div>
    }
    else
    {
        <div style="padding: 20px; background: #004400; border-radius: 10px; margin: 20px 0;">
            <h2 style="color: lime;">✅ Aplikace načtena úspěšně!</h2>
            <p style="color: #aaffaa;">Načteno týmů: @_teamCount</p>
        </div>
        
        <div style="margin: 20px 0;">
            <h3 style="color: #00d4ff; margin-bottom: 15px;">Žebříček týmů:</h3>
            @if (_teams != null && _teams.Any())
            {
                <div style="display: grid; gap: 10px;">
                    @foreach (var team in _teams)
                    {
                        <div style="background: #2a2a2a; padding: 15px; border-radius: 8px; border-left: 4px solid #00d4ff;">
                            <div style="display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <strong style="color: #00d4ff; font-size: 1.2em;">@team.Name</strong>
                                    <span style="color: #888; margin-left: 15px;">PIN: @team.PinCode</span>
                                </div>
                                <div style="font-size: 1.5em; color: lime; font-weight: bold;">
                                    @team.TotalScore bodů
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p style="color: #888;">Žádné týmy zatím nebyly přidány.</p>
            }
        </div>
        
        <button style="background: #ff6600; color: white; padding: 15px 30px; border: none; border-radius: 8px; margin: 20px 0; cursor: pointer; font-size: 1.1em;" 
                @onclick="ReloadData">
            🔄 Znovu načíst data
        </button>
    }
    
    <div style="margin-top: 40px; padding: 20px; background: #2a2a2a; border-radius: 10px;">
        <h3 style="color: #00d4ff;">Debug Log:</h3>
        <pre style="color: #aaa; font-size: 0.9em; overflow-x: auto;">@_debugLog</pre>
    </div>
</div>

@code {
    private bool _isLoading = true;
    private string? _error = null;
    private string _status = "Inicializace...";
    private int _teamCount = 0;
    private List<BlazorApp1.Models.Team>? _teams = null;
    private string _debugLog = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        _isLoading = true;
        _error = null;
        _debugLog = "";
        _status = "Připojování k TeamService...";
        StateHasChanged();
        
        try
        {
            AddDebugLog("OnInitializedAsync začíná");
            _status = "Načítání žebříčku...";
            StateHasChanged();
            
            AddDebugLog("Volám TeamService.GetLeaderboardAsync()");
            _teams = await TeamService.GetLeaderboardAsync();
            
            _teamCount = _teams?.Count ?? 0;
            AddDebugLog($"Načteno {_teamCount} týmů");
            
            _status = "Hotovo!";
            _isLoading = false;
            AddDebugLog("Načítání úspěšně dokončeno");
        }
        catch (Exception ex)
        {
            _error = $"Typ: {ex.GetType().Name}\nZpráva: {ex.Message}\n\nStack Trace:\n{ex.StackTrace}";
            AddDebugLog($"CHYBA: {ex.GetType().Name} - {ex.Message}");
            _isLoading = false;
        }
        
        StateHasChanged();
    }

    private async Task ReloadData()
    {
        await LoadData();
    }

    private void AddDebugLog(string message)
    {
        var timestamp = DateTime.Now.ToString("HH:mm:ss.fff");
        _debugLog += $"[{timestamp}] {message}\n";
    }
}
